@page "/agency"
@using Calculator.Data
@inject AgentService AgentService

<h3>Агентство Екатерины Анатольевны</h3>

<button class="btn btn-primary" @onclick="OpenAddAgentModal">Добавить агента</button>

<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Имя</th>
            <th>Фамилия</th>
            <th>Возраст</th>
            <th>№ договора</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var Agent in Agents)
        {
            <tr>
                <td>@Agent.Id</td>
                <td>@Agent.FirstName</td>
                <td>@Agent.LastName</td>
                <td>@Agent.Age</td>
                <td>@Agent.Dogovor</td>
            </tr>
        }
    </tbody>
</table>

<AddAgentModal @ref="addAgentModal" OnAgentAdded="HandleAgentAdded" />

@code {
    private List<Agent> Agents = new List<Agent>();
    private AddAgentModal addAgentModal;

    protected override async Task OnInitializedAsync()
    {
        Agents = await AgentService.GetAgentsAsync();
    }

    private void OpenAddAgentModal()
    {
        addAgentModal.Show();
    }

    private async Task HandleAgentAdded()
    {
        Agents = await AgentService.GetAgentsAsync();
        StateHasChanged();
    }
}

@code {
    [Parameter]
    public EventCallback OnAgentAdded { get; set; }

    private string ModalDisplay = "display: none;";
    private Agent newAgent = new Agent();

    public void Show()
    {
        newAgent = new Agent();
        ModalDisplay = "display: block;";
    }

    public void Hide()
    {
        ModalDisplay = "display: none;";
    }

    private async Task AddAgent()
    {
        await AgentService.AddAgentAsync(newAgent);
        Hide();
        await OnAgentAdded.InvokeAsync();
    }
}